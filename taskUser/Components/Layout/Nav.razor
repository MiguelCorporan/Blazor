@using Blazored.SessionStorage
@inject NavigationManager navigation
@inject ISessionStorageService sessionStorage

@rendermode InteractiveServer

<nav class="navbar navbar-expand-lg bg-white shadow-sm px-4 py-2 w-100">
    <div class="container">
        <!-- Logo / Nombre -->
        <a class="navbar-brand fw-bold text-primary fs-4" href="#">FasTask</a>

        <!-- Botón hamburguesa para responsive -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Contenido colapsable -->
        <div class="collapse navbar-collapse justify-content-end" id="navbarContent">
            <div class="d-flex gap-2">
				@if (isLoggedIn)
				{   
                    <h4>@userName</h4>
                    <button type="button" @onclick="LogOut" class="btn btn-outline-primary">Log out</button>
					
				}
				else
				{
                    <button type="button" @onclick="NavigateToLogin" class="btn btn-outline-primary">Login</button>
                    <button class="btn btn-primary" @onclick="NavigateToRegister">Registro</button>
                }
                
            </div>
        </div>
    </div>
</nav> 

@code {

    private bool isLoggedIn = false;
    private string userName = string.Empty;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var storedUsername = await sessionStorage.GetItemAsync<string>("AdminName");
        if (!string.IsNullOrEmpty(storedUsername))
        {
            isLoggedIn = true;
            userName = storedUsername;
			StateHasChanged(); // Actualiza la interfaz de usuario
        }
        else
        {
            isLoggedIn = false;
            userName = string.Empty;
        }
    }

    private async Task LogOut()
    {
        await sessionStorage.ClearAsync();
		isLoggedIn = false;
		userName = string.Empty;
        navigation.NavigateTo("/login");
    }

    private void NavigateToLogin()
    {
        Console.WriteLine("Navigating to Login");
        navigation.NavigateTo("/login");
    }

    private void NavigateToRegister()
    {
        navigation.NavigateTo("/register");
    }
}